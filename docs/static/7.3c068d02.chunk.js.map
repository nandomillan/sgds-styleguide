{"version":3,"sources":["webpack:///static/7.3c068d02.chunk.js","webpack:///./catalog/chart_anatomy.md?7c60","webpack:///./catalog/chart_anatomy.md"],"names":["webpackJsonp","784","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","793"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GCF7B,GAAIC,GAAQ,EAAQ,IAChBC,EAAmB,EAAQ,IAC3BC,EAAe,EAAQ,KAAWA,YAClCA,GAAaC,aACfD,EAAeA,EAAaE,QAE9B,IAAIC,GAAsBJ,GACxBK,YAAa,sBACbC,gBAAiB,WACf,OAAQC,QAAS,EAAQ,OAE3BC,mBAAoB,aAUpBC,OAAQ,WACN,MAAOV,GAAMW,cAAcT,EAAcU,OAAOC,UAAWC,KAAKC,OAAQP,QAASM,KAAKE,MAAMR,aAGhGH,GAAoBY,oBAAqB,EACzCpB,EAAOC,QAAUO,GDUfa,IACA,SAAUrB,EAAQC,GEtCxBD,EAAOC,QAAU","file":"static/7.3c068d02.chunk.js","sourcesContent":["webpackJsonp([7],{\n\n/***/ 784:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(15);\n    var createReactClass = __webpack_require__(45);\n    var PageRenderer = __webpack_require__(293).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(793)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../node_modules/raw-loader/index.js!./chart_anatomy.md\", function() {\n            component.setState({\n              content: require(\"!!../node_modules/raw-loader/index.js!./chart_anatomy.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 793:\n/***/ (function(module, exports) {\n\nmodule.exports = \"# Elements of a chart\\r\\nMost data visualizations are rectangular charts, with two dimensions represented on a vertical and a horizontal axis. Rectangular charts are typically constructed with a set of common elements including a title (sometimes also a subtitle), a legend and axis titles. In interactive visualizations charts may also include some navigation tools like a tooltip or a toolbar.\\r\\n\\r\\n```image\\r\\nplain: true\\r\\nspan: 4\\r\\nsrc: \\\"chart_anatomy_modif.png\\\"\\r\\n```\\r\\n\\r\\n1. __Chart title__\\r\\nThe title of a visualization should be concise and descriptive and should reflect the insight the data reveals.\\r\\n2. __Ticks__\\r\\n3. __Axes__\\r\\nThe X-axis is horizontal and the Y-axis is vertical. Axes should be accessible against their background with a 3:1 contrast ratio.\\r\\n4. __Axes titles__\\r\\n5. __Legend__\\r\\nMany charts will use different visual properties such as colors, textures, and shapes to represent different categories or dimensions of data. A legend tells you what these associations mean and helps you to determine the chart’s meaning.\\r\\n6. __Tool bar__\\r\\n7. __Graph frame__\\r\\nThe graph frame is the area where data will be visualized with graphics or numbers. Gridlines help a viewer estimate the values of a data point but are not required. Use gridlines sparingly, as too much visual noise makes the graph frame busy and negatively impacts the user’s ability to interpret the data.\\r\\n8. __Tool tip__\\r\\nA tooltip is a message that appears when a cursor is positioned over an element, such as a data point, icon button, or truncated text. By default, tooltips show on hover to reveal more detailed information or context for specific chart elements. A tooltip should repeat the corresponding values of the data point on both axes and any other relevant details.\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/7.3c068d02.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../node_modules/raw-loader/index.js!./chart_anatomy.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../node_modules/raw-loader/index.js!./chart_anatomy.md\", function() {\n            component.setState({\n              content: require(\"!!../node_modules/raw-loader/index.js!./chart_anatomy.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/chart_anatomy.md\n// module id = 784\n// module chunks = 7","module.exports = \"# Elements of a chart\\r\\nMost data visualizations are rectangular charts, with two dimensions represented on a vertical and a horizontal axis. Rectangular charts are typically constructed with a set of common elements including a title (sometimes also a subtitle), a legend and axis titles. In interactive visualizations charts may also include some navigation tools like a tooltip or a toolbar.\\r\\n\\r\\n```image\\r\\nplain: true\\r\\nspan: 4\\r\\nsrc: \\\"chart_anatomy_modif.png\\\"\\r\\n```\\r\\n\\r\\n1. __Chart title__\\r\\nThe title of a visualization should be concise and descriptive and should reflect the insight the data reveals.\\r\\n2. __Ticks__\\r\\n3. __Axes__\\r\\nThe X-axis is horizontal and the Y-axis is vertical. Axes should be accessible against their background with a 3:1 contrast ratio.\\r\\n4. __Axes titles__\\r\\n5. __Legend__\\r\\nMany charts will use different visual properties such as colors, textures, and shapes to represent different categories or dimensions of data. A legend tells you what these associations mean and helps you to determine the chart’s meaning.\\r\\n6. __Tool bar__\\r\\n7. __Graph frame__\\r\\nThe graph frame is the area where data will be visualized with graphics or numbers. Gridlines help a viewer estimate the values of a data point but are not required. Use gridlines sparingly, as too much visual noise makes the graph frame busy and negatively impacts the user’s ability to interpret the data.\\r\\n8. __Tool tip__\\r\\nA tooltip is a message that appears when a cursor is positioned over an element, such as a data point, icon button, or truncated text. By default, tooltips show on hover to reveal more detailed information or context for specific chart elements. A tooltip should repeat the corresponding values of the data point on both axes and any other relevant details.\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/chart_anatomy.md\n// module id = 793\n// module chunks = 7"],"sourceRoot":""}